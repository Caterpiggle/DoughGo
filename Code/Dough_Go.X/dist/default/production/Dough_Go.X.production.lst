

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 26 09:17:11 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F18344
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 21/06/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F18344 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0097                     	;# 
   103     009B                     	;# 
   104     009B                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     018E                     	;# 
   124     0197                     	;# 
   125     0199                     	;# 
   126     0199                     	;# 
   127     0199                     	;# 
   128     019A                     	;# 
   129     019A                     	;# 
   130     019A                     	;# 
   131     019B                     	;# 
   132     019B                     	;# 
   133     019B                     	;# 
   134     019B                     	;# 
   135     019B                     	;# 
   136     019C                     	;# 
   137     019C                     	;# 
   138     019C                     	;# 
   139     019D                     	;# 
   140     019D                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019E                     	;# 
   144     019E                     	;# 
   145     019F                     	;# 
   146     019F                     	;# 
   147     019F                     	;# 
   148     019F                     	;# 
   149     019F                     	;# 
   150     020C                     	;# 
   151     020D                     	;# 
   152     020E                     	;# 
   153     0211                     	;# 
   154     0211                     	;# 
   155     0212                     	;# 
   156     0212                     	;# 
   157     0213                     	;# 
   158     0213                     	;# 
   159     0214                     	;# 
   160     0214                     	;# 
   161     0215                     	;# 
   162     0215                     	;# 
   163     0215                     	;# 
   164     0215                     	;# 
   165     0216                     	;# 
   166     0216                     	;# 
   167     0217                     	;# 
   168     0217                     	;# 
   169     028C                     	;# 
   170     028D                     	;# 
   171     028E                     	;# 
   172     0291                     	;# 
   173     0291                     	;# 
   174     0292                     	;# 
   175     0293                     	;# 
   176     0294                     	;# 
   177     0295                     	;# 
   178     0295                     	;# 
   179     0296                     	;# 
   180     0297                     	;# 
   181     0298                     	;# 
   182     029F                     	;# 
   183     030C                     	;# 
   184     030D                     	;# 
   185     030E                     	;# 
   186     0311                     	;# 
   187     0311                     	;# 
   188     0312                     	;# 
   189     0313                     	;# 
   190     0314                     	;# 
   191     0315                     	;# 
   192     0315                     	;# 
   193     0316                     	;# 
   194     0317                     	;# 
   195     0318                     	;# 
   196     038C                     	;# 
   197     038D                     	;# 
   198     038E                     	;# 
   199     0391                     	;# 
   200     0392                     	;# 
   201     0393                     	;# 
   202     0394                     	;# 
   203     0395                     	;# 
   204     0396                     	;# 
   205     0397                     	;# 
   206     0398                     	;# 
   207     0399                     	;# 
   208     039A                     	;# 
   209     039C                     	;# 
   210     039D                     	;# 
   211     039E                     	;# 
   212     039F                     	;# 
   213     0411                     	;# 
   214     0411                     	;# 
   215     0412                     	;# 
   216     0413                     	;# 
   217     0414                     	;# 
   218     0415                     	;# 
   219     0416                     	;# 
   220     0417                     	;# 
   221     0418                     	;# 
   222     0418                     	;# 
   223     0419                     	;# 
   224     041A                     	;# 
   225     041B                     	;# 
   226     041C                     	;# 
   227     041D                     	;# 
   228     041E                     	;# 
   229     041F                     	;# 
   230     0498                     	;# 
   231     0498                     	;# 
   232     0499                     	;# 
   233     049A                     	;# 
   234     049B                     	;# 
   235     049B                     	;# 
   236     049C                     	;# 
   237     049D                     	;# 
   238     049E                     	;# 
   239     049F                     	;# 
   240     0617                     	;# 
   241     0618                     	;# 
   242     0619                     	;# 
   243     0619                     	;# 
   244     061A                     	;# 
   245     061B                     	;# 
   246     061C                     	;# 
   247     061C                     	;# 
   248     061F                     	;# 
   249     0691                     	;# 
   250     0692                     	;# 
   251     0693                     	;# 
   252     0694                     	;# 
   253     0695                     	;# 
   254     0696                     	;# 
   255     0697                     	;# 
   256     0698                     	;# 
   257     0699                     	;# 
   258     0711                     	;# 
   259     0712                     	;# 
   260     0713                     	;# 
   261     0714                     	;# 
   262     0715                     	;# 
   263     0716                     	;# 
   264     0717                     	;# 
   265     0718                     	;# 
   266     0719                     	;# 
   267     0891                     	;# 
   268     0891                     	;# 
   269     0891                     	;# 
   270     0891                     	;# 
   271     0891                     	;# 
   272     0891                     	;# 
   273     0892                     	;# 
   274     0892                     	;# 
   275     0892                     	;# 
   276     0893                     	;# 
   277     0893                     	;# 
   278     0893                     	;# 
   279     0893                     	;# 
   280     0893                     	;# 
   281     0893                     	;# 
   282     0894                     	;# 
   283     0894                     	;# 
   284     0894                     	;# 
   285     0895                     	;# 
   286     0895                     	;# 
   287     0895                     	;# 
   288     0896                     	;# 
   289     0896                     	;# 
   290     0896                     	;# 
   291     089B                     	;# 
   292     0911                     	;# 
   293     0912                     	;# 
   294     0913                     	;# 
   295     0914                     	;# 
   296     0915                     	;# 
   297     0916                     	;# 
   298     0918                     	;# 
   299     0919                     	;# 
   300     091A                     	;# 
   301     091B                     	;# 
   302     091C                     	;# 
   303     091D                     	;# 
   304     091E                     	;# 
   305     091F                     	;# 
   306     0E0F                     	;# 
   307     0E10                     	;# 
   308     0E11                     	;# 
   309     0E12                     	;# 
   310     0E13                     	;# 
   311     0E14                     	;# 
   312     0E15                     	;# 
   313     0E16                     	;# 
   314     0E17                     	;# 
   315     0E18                     	;# 
   316     0E19                     	;# 
   317     0E1A                     	;# 
   318     0E1B                     	;# 
   319     0E1C                     	;# 
   320     0E20                     	;# 
   321     0E21                     	;# 
   322     0E22                     	;# 
   323     0E24                     	;# 
   324     0E25                     	;# 
   325     0E28                     	;# 
   326     0E29                     	;# 
   327     0E2A                     	;# 
   328     0E2B                     	;# 
   329     0E2C                     	;# 
   330     0E2D                     	;# 
   331     0E2E                     	;# 
   332     0E2F                     	;# 
   333     0E90                     	;# 
   334     0E91                     	;# 
   335     0E92                     	;# 
   336     0E94                     	;# 
   337     0E95                     	;# 
   338     0E9C                     	;# 
   339     0E9D                     	;# 
   340     0E9E                     	;# 
   341     0E9F                     	;# 
   342     0EA0                     	;# 
   343     0EA1                     	;# 
   344     0EA2                     	;# 
   345     0EA3                     	;# 
   346     0EA4                     	;# 
   347     0EA5                     	;# 
   348     0EA6                     	;# 
   349     0EA7                     	;# 
   350     0F0F                     	;# 
   351     0F10                     	;# 
   352     0F11                     	;# 
   353     0F12                     	;# 
   354     0F13                     	;# 
   355     0F14                     	;# 
   356     0F15                     	;# 
   357     0F16                     	;# 
   358     0F17                     	;# 
   359     0F18                     	;# 
   360     0F19                     	;# 
   361     0F1A                     	;# 
   362     0F1B                     	;# 
   363     0F1C                     	;# 
   364     0F1D                     	;# 
   365     0F1E                     	;# 
   366     0F1F                     	;# 
   367     0F20                     	;# 
   368     0F21                     	;# 
   369     0F22                     	;# 
   370     0F23                     	;# 
   371     0F24                     	;# 
   372     0F25                     	;# 
   373     0F26                     	;# 
   374     0F27                     	;# 
   375     0F28                     	;# 
   376     0F29                     	;# 
   377     0F2A                     	;# 
   378     0F2B                     	;# 
   379     0F2C                     	;# 
   380     0F2D                     	;# 
   381     0F2E                     	;# 
   382     0F2F                     	;# 
   383     0F30                     	;# 
   384     0F31                     	;# 
   385     0F32                     	;# 
   386     0F33                     	;# 
   387     0F34                     	;# 
   388     0F35                     	;# 
   389     0F36                     	;# 
   390     0F37                     	;# 
   391     0FE4                     	;# 
   392     0FE5                     	;# 
   393     0FE6                     	;# 
   394     0FE7                     	;# 
   395     0FE8                     	;# 
   396     0FE9                     	;# 
   397     0FEA                     	;# 
   398     0FEB                     	;# 
   399     0FED                     	;# 
   400     0FEE                     	;# 
   401     0FEF                     	;# 
   402     0000                     	;# 
   403     0001                     	;# 
   404     0002                     	;# 
   405     0003                     	;# 
   406     0004                     	;# 
   407     0005                     	;# 
   408     0006                     	;# 
   409     0007                     	;# 
   410     0008                     	;# 
   411     0009                     	;# 
   412     000A                     	;# 
   413     000B                     	;# 
   414     000C                     	;# 
   415     000D                     	;# 
   416     000E                     	;# 
   417     0010                     	;# 
   418     0011                     	;# 
   419     0012                     	;# 
   420     0013                     	;# 
   421     0014                     	;# 
   422     0015                     	;# 
   423     0015                     	;# 
   424     0016                     	;# 
   425     0016                     	;# 
   426     0017                     	;# 
   427     0018                     	;# 
   428     0019                     	;# 
   429     0019                     	;# 
   430     001A                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001D                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     008E                     	;# 
   439     0090                     	;# 
   440     0091                     	;# 
   441     0092                     	;# 
   442     0093                     	;# 
   443     0094                     	;# 
   444     0097                     	;# 
   445     009B                     	;# 
   446     009B                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     0111                     	;# 
   455     0112                     	;# 
   456     0113                     	;# 
   457     0114                     	;# 
   458     0115                     	;# 
   459     0116                     	;# 
   460     0117                     	;# 
   461     0118                     	;# 
   462     0119                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     018E                     	;# 
   466     0197                     	;# 
   467     0199                     	;# 
   468     0199                     	;# 
   469     0199                     	;# 
   470     019A                     	;# 
   471     019A                     	;# 
   472     019A                     	;# 
   473     019B                     	;# 
   474     019B                     	;# 
   475     019B                     	;# 
   476     019B                     	;# 
   477     019B                     	;# 
   478     019C                     	;# 
   479     019C                     	;# 
   480     019C                     	;# 
   481     019D                     	;# 
   482     019D                     	;# 
   483     019D                     	;# 
   484     019E                     	;# 
   485     019E                     	;# 
   486     019E                     	;# 
   487     019F                     	;# 
   488     019F                     	;# 
   489     019F                     	;# 
   490     019F                     	;# 
   491     019F                     	;# 
   492     020C                     	;# 
   493     020D                     	;# 
   494     020E                     	;# 
   495     0211                     	;# 
   496     0211                     	;# 
   497     0212                     	;# 
   498     0212                     	;# 
   499     0213                     	;# 
   500     0213                     	;# 
   501     0214                     	;# 
   502     0214                     	;# 
   503     0215                     	;# 
   504     0215                     	;# 
   505     0215                     	;# 
   506     0215                     	;# 
   507     0216                     	;# 
   508     0216                     	;# 
   509     0217                     	;# 
   510     0217                     	;# 
   511     028C                     	;# 
   512     028D                     	;# 
   513     028E                     	;# 
   514     0291                     	;# 
   515     0291                     	;# 
   516     0292                     	;# 
   517     0293                     	;# 
   518     0294                     	;# 
   519     0295                     	;# 
   520     0295                     	;# 
   521     0296                     	;# 
   522     0297                     	;# 
   523     0298                     	;# 
   524     029F                     	;# 
   525     030C                     	;# 
   526     030D                     	;# 
   527     030E                     	;# 
   528     0311                     	;# 
   529     0311                     	;# 
   530     0312                     	;# 
   531     0313                     	;# 
   532     0314                     	;# 
   533     0315                     	;# 
   534     0315                     	;# 
   535     0316                     	;# 
   536     0317                     	;# 
   537     0318                     	;# 
   538     038C                     	;# 
   539     038D                     	;# 
   540     038E                     	;# 
   541     0391                     	;# 
   542     0392                     	;# 
   543     0393                     	;# 
   544     0394                     	;# 
   545     0395                     	;# 
   546     0396                     	;# 
   547     0397                     	;# 
   548     0398                     	;# 
   549     0399                     	;# 
   550     039A                     	;# 
   551     039C                     	;# 
   552     039D                     	;# 
   553     039E                     	;# 
   554     039F                     	;# 
   555     0411                     	;# 
   556     0411                     	;# 
   557     0412                     	;# 
   558     0413                     	;# 
   559     0414                     	;# 
   560     0415                     	;# 
   561     0416                     	;# 
   562     0417                     	;# 
   563     0418                     	;# 
   564     0418                     	;# 
   565     0419                     	;# 
   566     041A                     	;# 
   567     041B                     	;# 
   568     041C                     	;# 
   569     041D                     	;# 
   570     041E                     	;# 
   571     041F                     	;# 
   572     0498                     	;# 
   573     0498                     	;# 
   574     0499                     	;# 
   575     049A                     	;# 
   576     049B                     	;# 
   577     049B                     	;# 
   578     049C                     	;# 
   579     049D                     	;# 
   580     049E                     	;# 
   581     049F                     	;# 
   582     0617                     	;# 
   583     0618                     	;# 
   584     0619                     	;# 
   585     0619                     	;# 
   586     061A                     	;# 
   587     061B                     	;# 
   588     061C                     	;# 
   589     061C                     	;# 
   590     061F                     	;# 
   591     0691                     	;# 
   592     0692                     	;# 
   593     0693                     	;# 
   594     0694                     	;# 
   595     0695                     	;# 
   596     0696                     	;# 
   597     0697                     	;# 
   598     0698                     	;# 
   599     0699                     	;# 
   600     0711                     	;# 
   601     0712                     	;# 
   602     0713                     	;# 
   603     0714                     	;# 
   604     0715                     	;# 
   605     0716                     	;# 
   606     0717                     	;# 
   607     0718                     	;# 
   608     0719                     	;# 
   609     0891                     	;# 
   610     0891                     	;# 
   611     0891                     	;# 
   612     0891                     	;# 
   613     0891                     	;# 
   614     0891                     	;# 
   615     0892                     	;# 
   616     0892                     	;# 
   617     0892                     	;# 
   618     0893                     	;# 
   619     0893                     	;# 
   620     0893                     	;# 
   621     0893                     	;# 
   622     0893                     	;# 
   623     0893                     	;# 
   624     0894                     	;# 
   625     0894                     	;# 
   626     0894                     	;# 
   627     0895                     	;# 
   628     0895                     	;# 
   629     0895                     	;# 
   630     0896                     	;# 
   631     0896                     	;# 
   632     0896                     	;# 
   633     089B                     	;# 
   634     0911                     	;# 
   635     0912                     	;# 
   636     0913                     	;# 
   637     0914                     	;# 
   638     0915                     	;# 
   639     0916                     	;# 
   640     0918                     	;# 
   641     0919                     	;# 
   642     091A                     	;# 
   643     091B                     	;# 
   644     091C                     	;# 
   645     091D                     	;# 
   646     091E                     	;# 
   647     091F                     	;# 
   648     0E0F                     	;# 
   649     0E10                     	;# 
   650     0E11                     	;# 
   651     0E12                     	;# 
   652     0E13                     	;# 
   653     0E14                     	;# 
   654     0E15                     	;# 
   655     0E16                     	;# 
   656     0E17                     	;# 
   657     0E18                     	;# 
   658     0E19                     	;# 
   659     0E1A                     	;# 
   660     0E1B                     	;# 
   661     0E1C                     	;# 
   662     0E20                     	;# 
   663     0E21                     	;# 
   664     0E22                     	;# 
   665     0E24                     	;# 
   666     0E25                     	;# 
   667     0E28                     	;# 
   668     0E29                     	;# 
   669     0E2A                     	;# 
   670     0E2B                     	;# 
   671     0E2C                     	;# 
   672     0E2D                     	;# 
   673     0E2E                     	;# 
   674     0E2F                     	;# 
   675     0E90                     	;# 
   676     0E91                     	;# 
   677     0E92                     	;# 
   678     0E94                     	;# 
   679     0E95                     	;# 
   680     0E9C                     	;# 
   681     0E9D                     	;# 
   682     0E9E                     	;# 
   683     0E9F                     	;# 
   684     0EA0                     	;# 
   685     0EA1                     	;# 
   686     0EA2                     	;# 
   687     0EA3                     	;# 
   688     0EA4                     	;# 
   689     0EA5                     	;# 
   690     0EA6                     	;# 
   691     0EA7                     	;# 
   692     0F0F                     	;# 
   693     0F10                     	;# 
   694     0F11                     	;# 
   695     0F12                     	;# 
   696     0F13                     	;# 
   697     0F14                     	;# 
   698     0F15                     	;# 
   699     0F16                     	;# 
   700     0F17                     	;# 
   701     0F18                     	;# 
   702     0F19                     	;# 
   703     0F1A                     	;# 
   704     0F1B                     	;# 
   705     0F1C                     	;# 
   706     0F1D                     	;# 
   707     0F1E                     	;# 
   708     0F1F                     	;# 
   709     0F20                     	;# 
   710     0F21                     	;# 
   711     0F22                     	;# 
   712     0F23                     	;# 
   713     0F24                     	;# 
   714     0F25                     	;# 
   715     0F26                     	;# 
   716     0F27                     	;# 
   717     0F28                     	;# 
   718     0F29                     	;# 
   719     0F2A                     	;# 
   720     0F2B                     	;# 
   721     0F2C                     	;# 
   722     0F2D                     	;# 
   723     0F2E                     	;# 
   724     0F2F                     	;# 
   725     0F30                     	;# 
   726     0F31                     	;# 
   727     0F32                     	;# 
   728     0F33                     	;# 
   729     0F34                     	;# 
   730     0F35                     	;# 
   731     0F36                     	;# 
   732     0F37                     	;# 
   733     0FE4                     	;# 
   734     0FE5                     	;# 
   735     0FE6                     	;# 
   736     0FE7                     	;# 
   737     0FE8                     	;# 
   738     0FE9                     	;# 
   739     0FEA                     	;# 
   740     0FEB                     	;# 
   741     0FED                     	;# 
   742     0FEE                     	;# 
   743     0FEF                     	;# 
   744                           
   745                           	psect	idataCOMMON
   746     0246                     __pidataCOMMON:
   747                           
   748                           ;initializer for _T_set
   749     0246  3455               	retlw	85
   750                           
   751                           	psect	idataBANK0
   752     0233                     __pidataBANK0:
   753                           
   754                           ;initializer for _disp_dig
   755     0233  3401               	retlw	1
   756     0234  3402               	retlw	2
   757     0235  3404               	retlw	4
   758     0236  3408               	retlw	8
   759                           
   760                           ;initializer for _T_cur
   761     0237  3446               	retlw	70
   762                           
   763                           ;initializer for _K_I
   764     0238  3401               	retlw	1
   765                           
   766                           ;initializer for _K_P
   767     0239  3401               	retlw	1
   768     0018                     _T0CON1	set	24
   769     0017                     _T0CON0	set	23
   770     000D                     _PORTB	set	13
   771     000C                     _PORTA	set	12
   772     000C                     _PORTAbits	set	12
   773     0010                     _PIR0bits	set	16
   774     000B                     _INTCONbits	set	11
   775     000E                     _PORTC	set	14
   776     000E                     _PORTCbits	set	14
   777     000D                     _PORTBbits	set	13
   778     0011                     _PIR1bits	set	17
   779     008E                     _TRISCbits	set	142
   780     008D                     _TRISBbits	set	141
   781     008C                     _TRISAbits	set	140
   782     0090                     _PIE0bits	set	144
   783     010E                     _LATC	set	270
   784     010D                     _LATB	set	269
   785     010C                     _LATA	set	268
   786     019F                     _BAUD1CON	set	415
   787     019B                     _SP1BRGL	set	411
   788     019D                     _RC1STA	set	413
   789     019E                     _TX1STA	set	414
   790     018E                     _ANSELC	set	398
   791     018D                     _ANSELB	set	397
   792     018C                     _ANSELA	set	396
   793     019A                     _TX1REG	set	410
   794     0215                     _SSP1CON1	set	533
   795     0214                     _SSP1STATbits	set	532
   796     0211                     _SSP1BUF	set	529
   797     0392                     _IOCANbits	set	914
   798     0393                     _IOCAF	set	915
   799     0393                     _IOCAFbits	set	915
   800     091F                     _OSCFRQ	set	2335
   801     0919                     _OSCCON1	set	2329
   802     0E21                     _SSP1DATPPS	set	3617
   803     0EA4                     _RC4PPS	set	3748
   804     0EA6                     _RC6PPS	set	3750
   805     0E90                     _RA0PPS	set	3728
   806                           
   807                           	psect	cinit
   808     0050                     start_initialization:	
   809                           ; #config settings
   810                           
   811     0050                     __initialization:
   812                           
   813                           ; Initialize objects allocated to COMMON
   814     0050  3182  2246  3180   	fcall	__pidataCOMMON	;fetch initializer
   815     0053  00FD               	movwf	__pdataCOMMON& (0+127)
   816                           
   817                           ; Initialize objects allocated to BANK0
   818     0054  3033               	movlw	low __pidataBANK0
   819     0055  0084               	movwf	4
   820     0056  3082               	movlw	(high __pidataBANK0)| (0+128)
   821     0057  0085               	movwf	5
   822     0058  302D               	movlw	low __pdataBANK0
   823     0059  0086               	movwf	6
   824     005A  3000               	movlw	high __pdataBANK0
   825     005B  0087               	movwf	7
   826     005C  3007               	movlw	7
   827     005D  3182  223A  3180   	fcall	init_ram
   828                           
   829                           ; Clear objects allocated to BANK0
   830     0060  3020               	movlw	low __pbssBANK0
   831     0061  0084               	movwf	4
   832     0062  3000               	movlw	high __pbssBANK0
   833     0063  0085               	movwf	5
   834     0064  300D               	movlw	13
   835     0065  3182  2240  3180   	fcall	clear_ram0
   836     0068                     end_of_initialization:	
   837                           ;End of C runtime variable initialization code
   838                           
   839     0068                     __end_of__initialization:
   840     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   841     0069  0020               	movlb	0
   842     006A  3180  28CB         	ljmp	_main	;jump to C main() function
   843                           
   844                           	psect	dataCOMMON
   845     007D                     __pdataCOMMON:
   846     007D                     _T_set:
   847     007D                     	ds	1
   848                           
   849                           	psect	bssBANK0
   850     0020                     __pbssBANK0:
   851     0020                     _disp_T:
   852     0020                     	ds	4
   853     0024                     _disp_num:
   854     0024                     	ds	1
   855     0025                     _TC_count:
   856     0025                     	ds	1
   857     0026                     _DC_max:
   858     0026                     	ds	1
   859     0027                     _dt:
   860     0027                     	ds	1
   861     0028                     _err_prev:
   862     0028                     	ds	1
   863     0029                     _T_set_ones:
   864     0029                     	ds	1
   865     002A                     _T_set_tens:
   866     002A                     	ds	1
   867     002B                     _T_cur_ones:
   868     002B                     	ds	1
   869     002C                     _T_cur_tens:
   870     002C                     	ds	1
   871                           
   872                           	psect	dataBANK0
   873     002D                     __pdataBANK0:
   874     002D                     _disp_dig:
   875     002D                     	ds	4
   876     0031                     _T_cur:
   877     0031                     	ds	1
   878     0032                     _K_I:
   879     0032                     	ds	1
   880     0033                     _K_P:
   881     0033                     	ds	1
   882                           
   883                           	psect	inittext
   884     023A                     init_ram:
   885     023A  00FE               	movwf	btemp
   886     023B                     initloop:
   887     023B  0012               	moviw fsr0++
   888     023C  001E               	movwi fsr1++
   889     023D  0BFE               	decfsz	btemp,f
   890     023E  2A3B               	goto	initloop
   891     023F  3400               	retlw	0
   892                           
   893                           	psect	clrtext
   894     0240                     clear_ram0:	
   895                           ;	Called with FSR0 containing the base address, and
   896                           ;	WREG with the size to clear
   897                           
   898     0240  0064               	clrwdt	;clear the watchdog before getting into this loop
   899     0241                     clrloop0:
   900     0241  0180               	clrf	0	;clear RAM location pointed to by FSR
   901     0242  3101               	addfsr 0,1
   902     0243  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   903     0244  2A41               	goto	clrloop0	;have we reached the end yet?
   904     0245  3400               	retlw	0	;all done for this memory range, return
   905                           
   906                           	psect	cstackCOMMON
   907     0070                     __pcstackCOMMON:
   908     0070                     ?_SPI_out:
   909     0070                     ??_SPI_out:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     ?_SPI_read:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ?_upd_temp:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ?_SPI_read_TC:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ?_upd_disp:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?_ISR:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ?_main:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ?___awdiv:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ?___awmod:	
   934                           ; 2 bytes @ 0x0
   935                           
   936     0070                     SPI_out@dat:	
   937                           ; 2 bytes @ 0x0
   938                           
   939     0070                     ___awdiv@divisor:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0070                     ___awmod@divisor:	
   943                           ; 2 bytes @ 0x0
   944                           
   945                           
   946                           ; 2 bytes @ 0x0
   947     0070                     	ds	1
   948     0071                     ??_SPI_read:
   949     0071                     SPI_read@addr:	
   950                           ; 1 bytes @ 0x1
   951                           
   952                           
   953                           ; 1 bytes @ 0x1
   954     0071                     	ds	1
   955     0072                     ??_SPI_read_TC:
   956     0072                     SPI_read_TC@TC_MB:	
   957                           ; 1 bytes @ 0x2
   958                           
   959     0072                     ___awdiv@dividend:	
   960                           ; 1 bytes @ 0x2
   961                           
   962     0072                     ___awmod@dividend:	
   963                           ; 2 bytes @ 0x2
   964                           
   965                           
   966                           ; 2 bytes @ 0x2
   967     0072                     	ds	2
   968     0074                     ??___awdiv:
   969     0074                     ??___awmod:	
   970                           ; 1 bytes @ 0x4
   971                           
   972                           
   973                           ; 1 bytes @ 0x4
   974     0074                     	ds	1
   975     0075                     ___awdiv@counter:
   976     0075                     ___awmod@counter:	
   977                           ; 1 bytes @ 0x5
   978                           
   979                           
   980                           ; 1 bytes @ 0x5
   981     0075                     	ds	1
   982     0076                     ___awdiv@sign:
   983     0076                     ___awmod@sign:	
   984                           ; 1 bytes @ 0x6
   985                           
   986                           
   987                           ; 1 bytes @ 0x6
   988     0076                     	ds	1
   989     0077                     ___awdiv@quotient:
   990                           
   991                           ; 2 bytes @ 0x7
   992     0077                     	ds	2
   993     0079                     ??_upd_temp:
   994                           
   995                           ; 1 bytes @ 0x9
   996     0079                     	ds	2
   997     007B                     ??_upd_disp:
   998                           
   999                           ; 1 bytes @ 0xB
  1000     007B                     	ds	1
  1001     007C                     ??_ISR:
  1002                           
  1003                           ; 1 bytes @ 0xC
  1004     007C                     	ds	1
  1005                           
  1006                           	psect	cstackBANK0
  1007     0034                     __pcstackBANK0:
  1008     0034                     ??_main:
  1009                           
  1010                           ; 1 bytes @ 0x0
  1011     0034                     	ds	2
  1012                           
  1013                           	psect	maintext
  1014     00CB                     __pmaintext:	
  1015 ;;
  1016 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1017 ;;
  1018 ;; *************** function _main *****************
  1019 ;; Defined at:
  1020 ;;		line 245 in file "main.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2
  1029 ;; Tracked objects:
  1030 ;;		On entry : B1F/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1034 ;;      Params:         0       0       0       0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       2       0       0       0       0       0       0
  1037 ;;      Totals:         0       2       0       0       0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels required when called: 5
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		Startup code after reset
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047     00CB                     _main:	
  1048                           ;psect for function _main
  1049                           
  1050     00CB                     l1253:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _main: [wreg+status,2]
  1053                           
  1054                           
  1055                           ;main.c: 248:     OSCCON1 = 0x60;
  1056     00CB  3060               	movlw	96
  1057     00CC  0032               	movlb	18	; select bank18
  1058     00CD  0099               	movwf	25	;volatile
  1059                           
  1060                           ;main.c: 249:     OSCFRQ = 0x03;
  1061     00CE  3003               	movlw	3
  1062     00CF  009F               	movwf	31	;volatile
  1063                           
  1064                           ;main.c: 251:     _delay((unsigned long)((2000)*((4000000)/4000.0)));
  1065     00D0  300B               	movlw	11
  1066     00D1  0020               	movlb	0	; select bank0
  1067     00D2  00B5               	movwf	??_main+1
  1068     00D3  3026               	movlw	38
  1069     00D4  00B4               	movwf	??_main
  1070     00D5  305D               	movlw	93
  1071     00D6                     u707:
  1072     00D6  0B89               	decfsz	9,f
  1073     00D7  28D6               	goto	u707
  1074     00D8  0BB4               	decfsz	??_main,f
  1075     00D9  28D6               	goto	u707
  1076     00DA  0BB5               	decfsz	??_main+1,f
  1077     00DB  28D6               	goto	u707
  1078     00DC  3200               	nop2
  1079     00DD                     l1255:
  1080                           
  1081                           ;main.c: 254:     TRISAbits.TRISA0 = 0;
  1082     00DD  0021               	movlb	1	; select bank1
  1083     00DE  100C               	bcf	12,0	;volatile
  1084     00DF                     l1257:
  1085                           
  1086                           ;main.c: 255:     TRISAbits.TRISA1 = 1;
  1087     00DF  148C               	bsf	12,1	;volatile
  1088     00E0                     l1259:
  1089                           
  1090                           ;main.c: 256:     TRISAbits.TRISA4 = 1;
  1091     00E0  160C               	bsf	12,4	;volatile
  1092     00E1                     l1261:
  1093                           
  1094                           ;main.c: 257:     TRISAbits.TRISA5 = 1;
  1095     00E1  168C               	bsf	12,5	;volatile
  1096     00E2                     l1263:
  1097                           
  1098                           ;main.c: 259:     TRISBbits.TRISB5 = 0;
  1099     00E2  128D               	bcf	13,5	;volatile
  1100     00E3                     l1265:
  1101                           
  1102                           ;main.c: 260:     TRISBbits.TRISB6 = 0;
  1103     00E3  130D               	bcf	13,6	;volatile
  1104     00E4                     l1267:
  1105                           
  1106                           ;main.c: 261:     TRISBbits.TRISB7 = 0;
  1107     00E4  138D               	bcf	13,7	;volatile
  1108     00E5                     l1269:
  1109                           
  1110                           ;main.c: 264:     TRISCbits.TRISC0 = 0;
  1111     00E5  100E               	bcf	14,0	;volatile
  1112     00E6                     l1271:
  1113                           
  1114                           ;main.c: 265:     TRISCbits.TRISC1 = 0;
  1115     00E6  108E               	bcf	14,1	;volatile
  1116     00E7                     l1273:
  1117                           
  1118                           ;main.c: 266:     TRISCbits.TRISC2 = 0;
  1119     00E7  110E               	bcf	14,2	;volatile
  1120     00E8                     l1275:
  1121                           
  1122                           ;main.c: 267:     TRISCbits.TRISC3 = 0;
  1123     00E8  118E               	bcf	14,3	;volatile
  1124     00E9                     l1277:
  1125                           
  1126                           ;main.c: 268:     TRISCbits.TRISC4 = 0;
  1127     00E9  120E               	bcf	14,4	;volatile
  1128     00EA                     l1279:
  1129                           
  1130                           ;main.c: 269:     TRISCbits.TRISC5 = 1;
  1131     00EA  168E               	bsf	14,5	;volatile
  1132     00EB                     l1281:
  1133                           
  1134                           ;main.c: 270:     TRISCbits.TRISC6 = 0;
  1135     00EB  130E               	bcf	14,6	;volatile
  1136     00EC                     l1283:
  1137                           
  1138                           ;main.c: 271:     TRISCbits.TRISC7 = 1;
  1139     00EC  178E               	bsf	14,7	;volatile
  1140     00ED                     l1285:
  1141                           
  1142                           ;main.c: 274:     PORTA = 0x00;
  1143     00ED  0020               	movlb	0	; select bank0
  1144     00EE  018C               	clrf	12	;volatile
  1145     00EF                     l1287:
  1146                           
  1147                           ;main.c: 275:     PORTB = 0x40;
  1148     00EF  3040               	movlw	64
  1149     00F0  008D               	movwf	13	;volatile
  1150                           
  1151                           ;main.c: 276:     PORTC = 0x00;
  1152     00F1  018E               	clrf	14	;volatile
  1153                           
  1154                           ;main.c: 279:     LATA = 0x00;
  1155     00F2  0022               	movlb	2	; select bank2
  1156     00F3  018C               	clrf	12	;volatile
  1157                           
  1158                           ;main.c: 280:     LATB = 0x00;
  1159     00F4  018D               	clrf	13	;volatile
  1160                           
  1161                           ;main.c: 281:     LATC = 0x00;
  1162     00F5  018E               	clrf	14	;volatile
  1163                           
  1164                           ;main.c: 283:     ANSELA = 0x00;
  1165     00F6  0023               	movlb	3	; select bank3
  1166     00F7  018C               	clrf	12	;volatile
  1167                           
  1168                           ;main.c: 284:     ANSELB = 0x00;
  1169     00F8  018D               	clrf	13	;volatile
  1170                           
  1171                           ;main.c: 285:     ANSELC = 0x00;
  1172     00F9  018E               	clrf	14	;volatile
  1173     00FA                     l1289:
  1174                           
  1175                           ;main.c: 290:     T0CON0 = 0x80;
  1176     00FA  3080               	movlw	128
  1177     00FB  0020               	movlb	0	; select bank0
  1178     00FC  0097               	movwf	23	;volatile
  1179     00FD                     l1291:
  1180                           
  1181                           ;main.c: 291:     T0CON1 = 0x44;
  1182     00FD  3044               	movlw	68
  1183     00FE  0098               	movwf	24	;volatile
  1184     00FF                     l1293:
  1185                           
  1186                           ;main.c: 296:     RA0PPS = 0x14;
  1187     00FF  3014               	movlw	20
  1188     0100  003D               	movlb	29	; select bank29
  1189     0101  0090               	movwf	16	;volatile
  1190     0102                     l1295:
  1191                           
  1192                           ;main.c: 297:     RC6PPS = 0x18;
  1193     0102  3018               	movlw	24
  1194     0103  00A6               	movwf	38	;volatile
  1195     0104                     l1297:
  1196                           
  1197                           ;main.c: 298:     RC4PPS = 0x19;
  1198     0104  3019               	movlw	25
  1199     0105  00A4               	movwf	36	;volatile
  1200     0106                     l1299:
  1201                           
  1202                           ;main.c: 299:     SSP1DATPPS = 0x15;
  1203     0106  3015               	movlw	21
  1204     0107  003C               	movlb	28	; select bank28
  1205     0108  00A1               	movwf	33	;volatile
  1206     0109                     l1301:
  1207                           
  1208                           ;main.c: 302:     TX1STA = 0x24;
  1209     0109  3024               	movlw	36
  1210     010A  0023               	movlb	3	; select bank3
  1211     010B  009E               	movwf	30	;volatile
  1212     010C                     l1303:
  1213                           
  1214                           ;main.c: 303:  RC1STA = 0x80;
  1215     010C  3080               	movlw	128
  1216     010D  009D               	movwf	29	;volatile
  1217     010E                     l1305:
  1218                           
  1219                           ;main.c: 304:  SP1BRGL = 0x19;
  1220     010E  3019               	movlw	25
  1221     010F  009B               	movwf	27	;volatile
  1222     0110                     l1307:
  1223                           
  1224                           ;main.c: 305:  BAUD1CON = 0x00;
  1225     0110  019F               	clrf	31	;volatile
  1226                           
  1227                           ;main.c: 325:     SSP1CON1 = 0x22;
  1228     0111  3022               	movlw	34
  1229     0112  0024               	movlb	4	; select bank4
  1230     0113  0095               	movwf	21	;volatile
  1231     0114                     l1309:
  1232                           
  1233                           ;main.c: 326:     SSP1STATbits.SMP = 0;
  1234     0114  1394               	bcf	20,7	;volatile
  1235     0115                     l1311:
  1236                           
  1237                           ;main.c: 327:     SSP1STATbits.CKE = 1;
  1238     0115  1714               	bsf	20,6	;volatile
  1239     0116                     l1313:
  1240                           
  1241                           ;main.c: 331:     IOCANbits.IOCAN4 = 1;
  1242     0116  0027               	movlb	7	; select bank7
  1243     0117  1612               	bsf	18,4	;volatile
  1244     0118                     l1315:
  1245                           
  1246                           ;main.c: 348:     PORTBbits.RB7 = 0;
  1247     0118  0020               	movlb	0	; select bank0
  1248     0119  138D               	bcf	13,7	;volatile
  1249     011A                     l1317:
  1250                           
  1251                           ;main.c: 350:     PORTCbits.RC0 = 0;
  1252     011A  100E               	bcf	14,0	;volatile
  1253     011B                     l1319:
  1254                           
  1255                           ;main.c: 351:     PORTCbits.RC1 = 0;
  1256     011B  108E               	bcf	14,1	;volatile
  1257     011C                     l1321:
  1258                           
  1259                           ;main.c: 352:     PORTCbits.RC2 = 0;
  1260     011C  110E               	bcf	14,2	;volatile
  1261     011D                     l1323:
  1262                           
  1263                           ;main.c: 353:     PORTCbits.RC3 = 0;
  1264     011D  118E               	bcf	14,3	;volatile
  1265     011E                     l1325:
  1266                           
  1267                           ;main.c: 356:     PIE0bits.IOCIE = 1;
  1268     011E  0021               	movlb	1	; select bank1
  1269     011F  1610               	bsf	16,4	;volatile
  1270     0120                     l1327:
  1271                           
  1272                           ;main.c: 357:     PIE0bits.TMR0IE = 1;
  1273     0120  1690               	bsf	16,5	;volatile
  1274     0121                     l1329:
  1275                           
  1276                           ;main.c: 359:     INTCONbits.GIE = 1;
  1277     0121  178B               	bsf	11,7	;volatile
  1278     0122                     l1331:
  1279                           
  1280                           ;main.c: 360:     INTCONbits.PEIE = 1;
  1281     0122  170B               	bsf	11,6	;volatile
  1282     0123                     l160:	
  1283                           ;main.c: 362:     while (1);
  1284                           
  1285     0123                     l161:
  1286     0123  2923               	goto	l160
  1287     0124  3180  284E         	ljmp	start
  1288     0126                     __end_of_main:
  1289                           
  1290                           	psect	intentry
  1291     0004                     __pintentry:	
  1292 ;; *************** function _ISR *****************
  1293 ;; Defined at:
  1294 ;;		line 207 in file "main.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1308 ;;      Params:         0       0       0       0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0
  1310 ;;      Temps:          1       0       0       0       0       0       0       0
  1311 ;;      Totals:         1       0       0       0       0       0       0       0
  1312 ;;Total ram usage:        1 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 4
  1315 ;; This function calls:
  1316 ;;		_upd_disp
  1317 ;;		_upd_temp
  1318 ;; This function is called by:
  1319 ;;		Interrupt level 1
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323     0004                     _ISR:
  1324                           
  1325                           ;incstack = 0
  1326     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1327                           
  1328                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1329     0005  3180               	pagesel	$
  1330     0006                     i1l1217:
  1331                           
  1332                           ;main.c: 209:     INTCONbits.GIE = 0;
  1333     0006  138B               	bcf	11,7	;volatile
  1334                           
  1335                           ;main.c: 210:     INTCONbits.PEIE = 0;
  1336     0007  130B               	bcf	11,6	;volatile
  1337                           
  1338                           ;main.c: 214:     if (PIE0bits.TMR0IE && PIR0bits.TMR0IF) {
  1339     0008  0021               	movlb	1	; select bank1
  1340     0009  1E90               	btfss	16,5	;volatile
  1341     000A  280C               	goto	u56_21
  1342     000B  280D               	goto	u56_20
  1343     000C                     u56_21:
  1344     000C  2817               	goto	i1l1225
  1345     000D                     u56_20:
  1346     000D                     i1l1219:
  1347     000D  0020               	movlb	0	; select bank0
  1348     000E  1E90               	btfss	16,5	;volatile
  1349     000F  2811               	goto	u57_21
  1350     0010  2812               	goto	u57_20
  1351     0011                     u57_21:
  1352     0011  2817               	goto	i1l1225
  1353     0012                     u57_20:
  1354     0012                     i1l1221:
  1355                           
  1356                           ;main.c: 215:         upd_disp();
  1357     0012  3181  21C7  3180   	fcall	_upd_disp
  1358     0015                     i1l1223:
  1359                           
  1360                           ;main.c: 216:         PIR0bits.TMR0IF = 0;
  1361     0015  0020               	movlb	0	; select bank0
  1362     0016  1290               	bcf	16,5	;volatile
  1363     0017                     i1l1225:
  1364                           
  1365                           ;main.c: 219:     if (PIE0bits.IOCIE && PIR0bits.IOCIF) {
  1366     0017  0021               	movlb	1	; select bank1
  1367     0018  1E10               	btfss	16,4	;volatile
  1368     0019  281B               	goto	u58_21
  1369     001A  281C               	goto	u58_20
  1370     001B                     u58_21:
  1371     001B  284A               	goto	i1l1249
  1372     001C                     u58_20:
  1373     001C                     i1l1227:
  1374     001C  0020               	movlb	0	; select bank0
  1375     001D  1E10               	btfss	16,4	;volatile
  1376     001E  2820               	goto	u59_21
  1377     001F  2821               	goto	u59_20
  1378     0020                     u59_21:
  1379     0020  284A               	goto	i1l1249
  1380     0021                     u59_20:
  1381     0021                     i1l1229:
  1382                           
  1383                           ;main.c: 221:         if (IOCAFbits.IOCAF4) {
  1384     0021  0027               	movlb	7	; select bank7
  1385     0022  1E13               	btfss	19,4	;volatile
  1386     0023  2825               	goto	u60_21
  1387     0024  2826               	goto	u60_20
  1388     0025                     u60_21:
  1389     0025  2842               	goto	i1l1245
  1390     0026                     u60_20:
  1391     0026                     i1l1231:
  1392                           
  1393                           ;main.c: 222:             if (PORTAbits.RA5 == 1) {
  1394     0026  0020               	movlb	0	; select bank0
  1395     0027  1E8C               	btfss	12,5	;volatile
  1396     0028  282A               	goto	u61_21
  1397     0029  282B               	goto	u61_20
  1398     002A                     u61_21:
  1399     002A  2838               	goto	i1l1239
  1400     002B                     u61_20:
  1401     002B                     i1l1233:
  1402                           
  1403                           ;main.c: 223:                 T_set += 1;
  1404     002B  3001               	movlw	1
  1405     002C  00FC               	movwf	??_ISR
  1406     002D  087C               	movf	??_ISR,w
  1407     002E  07FD               	addwf	_T_set,f
  1408     002F                     i1l1235:
  1409                           
  1410                           ;main.c: 224:                 if (T_set > 85) {
  1411     002F  3056               	movlw	86
  1412     0030  027D               	subwf	_T_set,w
  1413     0031  1C03               	skipc
  1414     0032  2834               	goto	u62_21
  1415     0033  2835               	goto	u62_20
  1416     0034                     u62_21:
  1417     0034  2842               	goto	i1l1245
  1418     0035                     u62_20:
  1419     0035                     i1l1237:
  1420                           
  1421                           ;main.c: 225:                     T_set = 85;
  1422     0035  3055               	movlw	85
  1423     0036  00FD               	movwf	_T_set
  1424     0037  2842               	goto	i1l1245
  1425     0038                     i1l1239:
  1426                           
  1427                           ;main.c: 228:                 T_set -= 1;
  1428     0038  3001               	movlw	1
  1429     0039  02FD               	subwf	_T_set,f
  1430     003A                     i1l1241:
  1431                           
  1432                           ;main.c: 229:                 if (T_set < 70) {
  1433     003A  3046               	movlw	70
  1434     003B  027D               	subwf	_T_set,w
  1435     003C  1803               	skipnc
  1436     003D  283F               	goto	u63_21
  1437     003E  2840               	goto	u63_20
  1438     003F                     u63_21:
  1439     003F  2842               	goto	i1l1245
  1440     0040                     u63_20:
  1441     0040                     i1l1243:
  1442                           
  1443                           ;main.c: 230:                     T_set = 70;
  1444     0040  3046               	movlw	70
  1445     0041  00FD               	movwf	_T_set
  1446     0042                     i1l1245:
  1447                           
  1448                           ;main.c: 235:         IOCAF &= (IOCAF ^ 0xFF);
  1449     0042  0027               	movlb	7	; select bank7
  1450     0043  0913               	comf	19,w	;volatile
  1451     0044  00FC               	movwf	??_ISR
  1452     0045  087C               	movf	??_ISR,w
  1453     0046  0593               	andwf	19,f	;volatile
  1454     0047                     i1l1247:
  1455                           
  1456                           ;main.c: 237:         upd_temp();
  1457     0047  3181  2179  3180   	fcall	_upd_temp
  1458     004A                     i1l1249:
  1459                           
  1460                           ;main.c: 240:     INTCONbits.GIE = 1;
  1461     004A  178B               	bsf	11,7	;volatile
  1462     004B                     i1l1251:
  1463                           
  1464                           ;main.c: 241:     INTCONbits.PEIE = 1;
  1465     004B  170B               	bsf	11,6	;volatile
  1466     004C                     i1l155:
  1467     004C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1468     004D  0009               	retfie
  1469     004E                     __end_of_ISR:
  1470                           
  1471                           	psect	text2
  1472     01C7                     __ptext2:	
  1473 ;; *************** function _upd_disp *****************
  1474 ;; Defined at:
  1475 ;;		line 166 in file "main.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1489 ;;      Params:         0       0       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0
  1491 ;;      Temps:          1       0       0       0       0       0       0       0
  1492 ;;      Totals:         1       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        1 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 3
  1496 ;; This function calls:
  1497 ;;		_SPI_out
  1498 ;;		_SPI_read_TC
  1499 ;;		_upd_temp
  1500 ;; This function is called by:
  1501 ;;		_ISR
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505     01C7                     _upd_disp:	
  1506                           ;psect for function _upd_disp
  1507                           
  1508     01C7                     i1l1171:	
  1509                           ;incstack = 0
  1510                           ; Regs used in _upd_disp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1511                           
  1512                           
  1513                           ;main.c: 170:     SPI_out(0x00);
  1514     01C7  3000               	movlw	0
  1515     01C8  3182  222A  3181   	fcall	_SPI_out
  1516     01CB                     i1l1173:
  1517                           
  1518                           ;main.c: 171:     PORTBbits.RB7 = 1;
  1519     01CB  0020               	movlb	0	; select bank0
  1520     01CC  178D               	bsf	13,7	;volatile
  1521     01CD                     i1l1175:
  1522                           
  1523                           ;main.c: 172:     PORTBbits.RB7 = 0;
  1524     01CD  138D               	bcf	13,7	;volatile
  1525     01CE                     i1l1177:
  1526                           
  1527                           ;main.c: 174:     disp_num++;
  1528     01CE  3001               	movlw	1
  1529     01CF  00FB               	movwf	??_upd_disp
  1530     01D0  087B               	movf	??_upd_disp,w
  1531     01D1  07A4               	addwf	_disp_num,f
  1532     01D2                     i1l1179:
  1533                           
  1534                           ;main.c: 175:     TC_count++;
  1535     01D2  3001               	movlw	1
  1536     01D3  00FB               	movwf	??_upd_disp
  1537     01D4  087B               	movf	??_upd_disp,w
  1538     01D5  07A5               	addwf	_TC_count,f
  1539     01D6                     i1l1181:
  1540                           
  1541                           ;main.c: 177:     if (disp_num > 3) {
  1542     01D6  3004               	movlw	4
  1543     01D7  0224               	subwf	_disp_num,w
  1544     01D8  1C03               	skipc
  1545     01D9  29DB               	goto	u53_21
  1546     01DA  29DC               	goto	u53_20
  1547     01DB                     u53_21:
  1548     01DB  29DD               	goto	i1l1185
  1549     01DC                     u53_20:
  1550     01DC                     i1l1183:
  1551                           
  1552                           ;main.c: 178:         disp_num = 0;
  1553     01DC  01A4               	clrf	_disp_num
  1554     01DD                     i1l1185:
  1555                           
  1556                           ;main.c: 181:     if (TC_count > 250) {
  1557     01DD  30FB               	movlw	251
  1558     01DE  0225               	subwf	_TC_count,w
  1559     01DF  1C03               	skipc
  1560     01E0  29E2               	goto	u54_21
  1561     01E1  29E3               	goto	u54_20
  1562     01E2                     u54_21:
  1563     01E2  29EB               	goto	i1l1193
  1564     01E3                     u54_20:
  1565     01E3                     i1l1187:
  1566                           
  1567                           ;main.c: 182:         SPI_read_TC();
  1568     01E3  3182  2204  3181   	fcall	_SPI_read_TC
  1569     01E6                     i1l1189:
  1570                           
  1571                           ;main.c: 183:         TC_count = 0;
  1572     01E6  0020               	movlb	0	; select bank0
  1573     01E7  01A5               	clrf	_TC_count
  1574     01E8                     i1l1191:
  1575                           
  1576                           ;main.c: 184:         upd_temp();
  1577     01E8  3181  2179  3181   	fcall	_upd_temp
  1578     01EB                     i1l1193:
  1579                           
  1580                           ;main.c: 187:     PORTC &= 0xF0;
  1581     01EB  30F0               	movlw	240
  1582     01EC  00FB               	movwf	??_upd_disp
  1583     01ED  087B               	movf	??_upd_disp,w
  1584     01EE  0020               	movlb	0	; select bank0
  1585     01EF  058E               	andwf	14,f	;volatile
  1586     01F0                     i1l1195:
  1587                           
  1588                           ;main.c: 188:     PORTC |= disp_T[disp_num];
  1589     01F0  0824               	movf	_disp_num,w
  1590     01F1  3E20               	addlw	(low (_disp_T| 0))& (0+255)
  1591     01F2  0086               	movwf	6
  1592     01F3  0187               	clrf	7
  1593     01F4  0801               	movf	1,w
  1594     01F5  00FB               	movwf	??_upd_disp
  1595     01F6  087B               	movf	??_upd_disp,w
  1596     01F7  048E               	iorwf	14,f	;volatile
  1597     01F8                     i1l1197:
  1598                           
  1599                           ;main.c: 190:     SPI_out(disp_dig[disp_num]);
  1600     01F8  0824               	movf	_disp_num,w
  1601     01F9  3E2D               	addlw	(low (_disp_dig| 0))& (0+255)
  1602     01FA  0086               	movwf	6
  1603     01FB  0187               	clrf	7
  1604     01FC  0801               	movf	1,w
  1605     01FD  3182  222A  3181   	fcall	_SPI_out
  1606     0200                     i1l1199:
  1607                           
  1608                           ;main.c: 191:     PORTBbits.RB7 = 1;
  1609     0200  0020               	movlb	0	; select bank0
  1610     0201  178D               	bsf	13,7	;volatile
  1611     0202                     i1l1201:
  1612                           
  1613                           ;main.c: 192:     PORTBbits.RB7 = 0;
  1614     0202  138D               	bcf	13,7	;volatile
  1615     0203                     i1l140:
  1616     0203  0008               	return
  1617     0204                     __end_of_upd_disp:
  1618                           
  1619                           	psect	text3
  1620     0179                     __ptext3:	
  1621 ;; *************** function _upd_temp *****************
  1622 ;; Defined at:
  1623 ;;		line 117 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1637 ;;      Params:         0       0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0       0       0       0
  1640 ;;      Totals:         2       0       0       0       0       0       0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 1
  1644 ;; This function calls:
  1645 ;;		___awdiv
  1646 ;;		___awmod
  1647 ;; This function is called by:
  1648 ;;		_upd_disp
  1649 ;;		_ISR
  1650 ;;		_get_cur_temp
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654     0179                     _upd_temp:	
  1655                           ;psect for function _upd_temp
  1656                           
  1657     0179                     i1l1145:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _upd_temp: [wreg+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;main.c: 119:     T_cur_tens = T_cur/10;
  1663     0179  300A               	movlw	10
  1664     017A  00F0               	movwf	___awdiv@divisor
  1665     017B  3000               	movlw	0
  1666     017C  00F1               	movwf	___awdiv@divisor+1
  1667     017D  0020               	movlb	0	; select bank0
  1668     017E  0831               	movf	_T_cur,w
  1669     017F  00F9               	movwf	??_upd_temp
  1670     0180  01FA               	clrf	??_upd_temp+1
  1671     0181  0879               	movf	??_upd_temp,w
  1672     0182  00F2               	movwf	___awdiv@dividend
  1673     0183  087A               	movf	??_upd_temp+1,w
  1674     0184  00F3               	movwf	___awdiv@dividend+1
  1675     0185  3180  206C  3181   	fcall	___awdiv
  1676     0188  0870               	movf	?___awdiv,w
  1677     0189  0020               	movlb	0	; select bank0
  1678     018A  00AC               	movwf	_T_cur_tens
  1679                           
  1680                           ;main.c: 120:     T_set_tens = T_set/10;
  1681     018B  300A               	movlw	10
  1682     018C  00F0               	movwf	___awdiv@divisor
  1683     018D  3000               	movlw	0
  1684     018E  00F1               	movwf	___awdiv@divisor+1
  1685     018F  087D               	movf	_T_set,w
  1686     0190  00F9               	movwf	??_upd_temp
  1687     0191  01FA               	clrf	??_upd_temp+1
  1688     0192  0879               	movf	??_upd_temp,w
  1689     0193  00F2               	movwf	___awdiv@dividend
  1690     0194  087A               	movf	??_upd_temp+1,w
  1691     0195  00F3               	movwf	___awdiv@dividend+1
  1692     0196  3180  206C  3181   	fcall	___awdiv
  1693     0199  0870               	movf	?___awdiv,w
  1694     019A  0020               	movlb	0	; select bank0
  1695     019B  00AA               	movwf	_T_set_tens
  1696                           
  1697                           ;main.c: 122:     T_cur_ones = T_cur%10;
  1698     019C  300A               	movlw	10
  1699     019D  00F0               	movwf	___awmod@divisor
  1700     019E  3000               	movlw	0
  1701     019F  00F1               	movwf	___awmod@divisor+1
  1702     01A0  0831               	movf	_T_cur,w
  1703     01A1  00F9               	movwf	??_upd_temp
  1704     01A2  01FA               	clrf	??_upd_temp+1
  1705     01A3  0879               	movf	??_upd_temp,w
  1706     01A4  00F2               	movwf	___awmod@dividend
  1707     01A5  087A               	movf	??_upd_temp+1,w
  1708     01A6  00F3               	movwf	___awmod@dividend+1
  1709     01A7  3181  2126  3181   	fcall	___awmod
  1710     01AA  0870               	movf	?___awmod,w
  1711     01AB  0020               	movlb	0	; select bank0
  1712     01AC  00AB               	movwf	_T_cur_ones
  1713                           
  1714                           ;main.c: 123:     T_set_ones = T_set%10;
  1715     01AD  300A               	movlw	10
  1716     01AE  00F0               	movwf	___awmod@divisor
  1717     01AF  3000               	movlw	0
  1718     01B0  00F1               	movwf	___awmod@divisor+1
  1719     01B1  087D               	movf	_T_set,w
  1720     01B2  00F9               	movwf	??_upd_temp
  1721     01B3  01FA               	clrf	??_upd_temp+1
  1722     01B4  0879               	movf	??_upd_temp,w
  1723     01B5  00F2               	movwf	___awmod@dividend
  1724     01B6  087A               	movf	??_upd_temp+1,w
  1725     01B7  00F3               	movwf	___awmod@dividend+1
  1726     01B8  3181  2126  3181   	fcall	___awmod
  1727     01BB  0870               	movf	?___awmod,w
  1728     01BC  0020               	movlb	0	; select bank0
  1729     01BD  00A9               	movwf	_T_set_ones
  1730     01BE                     i1l1147:
  1731                           
  1732                           ;main.c: 125:     disp_T[0] = T_cur_tens;
  1733     01BE  082C               	movf	_T_cur_tens,w
  1734     01BF  00A0               	movwf	_disp_T
  1735     01C0                     i1l1149:
  1736                           
  1737                           ;main.c: 126:     disp_T[1] = T_cur_ones;
  1738     01C0  082B               	movf	_T_cur_ones,w
  1739     01C1  00A1               	movwf	_disp_T+1
  1740     01C2                     i1l1151:
  1741                           
  1742                           ;main.c: 127:     disp_T[2] = T_set_tens;
  1743     01C2  082A               	movf	_T_set_tens,w
  1744     01C3  00A2               	movwf	_disp_T+2
  1745     01C4                     i1l1153:
  1746                           
  1747                           ;main.c: 128:     disp_T[3] = T_set_ones;
  1748     01C4  0829               	movf	_T_set_ones,w
  1749     01C5  00A3               	movwf	_disp_T+3
  1750     01C6                     i1l126:
  1751     01C6  0008               	return
  1752     01C7                     __end_of_upd_temp:
  1753                           
  1754                           	psect	text4
  1755     0126                     __ptext4:	
  1756 ;; *************** function ___awmod *****************
  1757 ;; Defined at:
  1758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  divisor         2    0[COMMON] int 
  1761 ;;  dividend        2    2[COMMON] int 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  sign            1    6[COMMON] unsigned char 
  1764 ;;  counter         1    5[COMMON] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  2    0[COMMON] int 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, status,0
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1774 ;;      Params:         4       0       0       0       0       0       0       0
  1775 ;;      Locals:         2       0       0       0       0       0       0       0
  1776 ;;      Temps:          1       0       0       0       0       0       0       0
  1777 ;;      Totals:         7       0       0       0       0       0       0       0
  1778 ;;Total ram usage:        7 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_upd_temp
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787     0126                     ___awmod:	
  1788                           ;psect for function ___awmod
  1789                           
  1790     0126                     i1l1107:	
  1791                           ;incstack = 0
  1792                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1793                           
  1794     0126  01F6               	clrf	___awmod@sign
  1795     0127                     i1l1109:
  1796     0127  1FF3               	btfss	___awmod@dividend+1,7
  1797     0128  292A               	goto	u44_21
  1798     0129  292B               	goto	u44_20
  1799     012A                     u44_21:
  1800     012A  2932               	goto	i1l1115
  1801     012B                     u44_20:
  1802     012B                     i1l1111:
  1803     012B  09F2               	comf	___awmod@dividend,f
  1804     012C  09F3               	comf	___awmod@dividend+1,f
  1805     012D  0AF2               	incf	___awmod@dividend,f
  1806     012E  1903               	skipnz
  1807     012F  0AF3               	incf	___awmod@dividend+1,f
  1808     0130                     i1l1113:
  1809     0130  01F6               	clrf	___awmod@sign
  1810     0131  0AF6               	incf	___awmod@sign,f
  1811     0132                     i1l1115:
  1812     0132  1FF1               	btfss	___awmod@divisor+1,7
  1813     0133  2935               	goto	u45_21
  1814     0134  2936               	goto	u45_20
  1815     0135                     u45_21:
  1816     0135  293B               	goto	i1l1119
  1817     0136                     u45_20:
  1818     0136                     i1l1117:
  1819     0136  09F0               	comf	___awmod@divisor,f
  1820     0137  09F1               	comf	___awmod@divisor+1,f
  1821     0138  0AF0               	incf	___awmod@divisor,f
  1822     0139  1903               	skipnz
  1823     013A  0AF1               	incf	___awmod@divisor+1,f
  1824     013B                     i1l1119:
  1825     013B  0870               	movf	___awmod@divisor,w
  1826     013C  0471               	iorwf	___awmod@divisor+1,w
  1827     013D  1903               	btfsc	3,2
  1828     013E  2940               	goto	u46_21
  1829     013F  2941               	goto	u46_20
  1830     0140                     u46_21:
  1831     0140  296A               	goto	i1l1137
  1832     0141                     u46_20:
  1833     0141                     i1l1121:
  1834     0141  01F5               	clrf	___awmod@counter
  1835     0142  0AF5               	incf	___awmod@counter,f
  1836     0143  294D               	goto	i1l1127
  1837     0144                     i1l1123:
  1838     0144  3001               	movlw	1
  1839     0145                     u47_25:
  1840     0145  35F0               	lslf	___awmod@divisor,f
  1841     0146  0DF1               	rlf	___awmod@divisor+1,f
  1842     0147  0B89               	decfsz	9,f
  1843     0148  2945               	goto	u47_25
  1844     0149                     i1l1125:
  1845     0149  3001               	movlw	1
  1846     014A  00F4               	movwf	??___awmod
  1847     014B  0874               	movf	??___awmod,w
  1848     014C  07F5               	addwf	___awmod@counter,f
  1849     014D                     i1l1127:
  1850     014D  1FF1               	btfss	___awmod@divisor+1,7
  1851     014E  2950               	goto	u48_21
  1852     014F  2951               	goto	u48_20
  1853     0150                     u48_21:
  1854     0150  2944               	goto	i1l1123
  1855     0151                     u48_20:
  1856     0151                     i1l1129:
  1857     0151  0871               	movf	___awmod@divisor+1,w
  1858     0152  0273               	subwf	___awmod@dividend+1,w
  1859     0153  1D03               	skipz
  1860     0154  2957               	goto	u49_25
  1861     0155  0870               	movf	___awmod@divisor,w
  1862     0156  0272               	subwf	___awmod@dividend,w
  1863     0157                     u49_25:
  1864     0157  1C03               	skipc
  1865     0158  295A               	goto	u49_21
  1866     0159  295B               	goto	u49_20
  1867     015A                     u49_21:
  1868     015A  295F               	goto	i1l1133
  1869     015B                     u49_20:
  1870     015B                     i1l1131:
  1871     015B  0870               	movf	___awmod@divisor,w
  1872     015C  02F2               	subwf	___awmod@dividend,f
  1873     015D  0871               	movf	___awmod@divisor+1,w
  1874     015E  3BF3               	subwfb	___awmod@dividend+1,f
  1875     015F                     i1l1133:
  1876     015F  3001               	movlw	1
  1877     0160                     u50_25:
  1878     0160  36F1               	lsrf	___awmod@divisor+1,f
  1879     0161  0CF0               	rrf	___awmod@divisor,f
  1880     0162  0B89               	decfsz	9,f
  1881     0163  2960               	goto	u50_25
  1882     0164                     i1l1135:
  1883     0164  3001               	movlw	1
  1884     0165  02F5               	subwf	___awmod@counter,f
  1885     0166  1D03               	btfss	3,2
  1886     0167  2969               	goto	u51_21
  1887     0168  296A               	goto	u51_20
  1888     0169                     u51_21:
  1889     0169  2951               	goto	i1l1129
  1890     016A                     u51_20:
  1891     016A                     i1l1137:
  1892     016A  0876               	movf	___awmod@sign,w
  1893     016B  1903               	btfsc	3,2
  1894     016C  296E               	goto	u52_21
  1895     016D  296F               	goto	u52_20
  1896     016E                     u52_21:
  1897     016E  2974               	goto	i1l1141
  1898     016F                     u52_20:
  1899     016F                     i1l1139:
  1900     016F  09F2               	comf	___awmod@dividend,f
  1901     0170  09F3               	comf	___awmod@dividend+1,f
  1902     0171  0AF2               	incf	___awmod@dividend,f
  1903     0172  1903               	skipnz
  1904     0173  0AF3               	incf	___awmod@dividend+1,f
  1905     0174                     i1l1141:
  1906     0174  0873               	movf	___awmod@dividend+1,w
  1907     0175  00F1               	movwf	?___awmod+1
  1908     0176  0872               	movf	___awmod@dividend,w
  1909     0177  00F0               	movwf	?___awmod
  1910     0178                     i1l481:
  1911     0178  0008               	return
  1912     0179                     __end_of___awmod:
  1913                           
  1914                           	psect	text5
  1915     006C                     __ptext5:	
  1916 ;; *************** function ___awdiv *****************
  1917 ;; Defined at:
  1918 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  divisor         2    0[COMMON] int 
  1921 ;;  dividend        2    2[COMMON] int 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  quotient        2    7[COMMON] int 
  1924 ;;  sign            1    6[COMMON] unsigned char 
  1925 ;;  counter         1    5[COMMON] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2    0[COMMON] int 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1935 ;;      Params:         4       0       0       0       0       0       0       0
  1936 ;;      Locals:         4       0       0       0       0       0       0       0
  1937 ;;      Temps:          1       0       0       0       0       0       0       0
  1938 ;;      Totals:         9       0       0       0       0       0       0       0
  1939 ;;Total ram usage:        9 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_upd_temp
  1945 ;;		_upd_PWM
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949     006C                     ___awdiv:	
  1950                           ;psect for function ___awdiv
  1951                           
  1952     006C                     i1l1063:	
  1953                           ;incstack = 0
  1954                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1955                           
  1956     006C  01F6               	clrf	___awdiv@sign
  1957     006D                     i1l1065:
  1958     006D  1FF1               	btfss	___awdiv@divisor+1,7
  1959     006E  2870               	goto	u34_21
  1960     006F  2871               	goto	u34_20
  1961     0070                     u34_21:
  1962     0070  2878               	goto	i1l1071
  1963     0071                     u34_20:
  1964     0071                     i1l1067:
  1965     0071  09F0               	comf	___awdiv@divisor,f
  1966     0072  09F1               	comf	___awdiv@divisor+1,f
  1967     0073  0AF0               	incf	___awdiv@divisor,f
  1968     0074  1903               	skipnz
  1969     0075  0AF1               	incf	___awdiv@divisor+1,f
  1970     0076                     i1l1069:
  1971     0076  01F6               	clrf	___awdiv@sign
  1972     0077  0AF6               	incf	___awdiv@sign,f
  1973     0078                     i1l1071:
  1974     0078  1FF3               	btfss	___awdiv@dividend+1,7
  1975     0079  287B               	goto	u35_21
  1976     007A  287C               	goto	u35_20
  1977     007B                     u35_21:
  1978     007B  2885               	goto	i1l1077
  1979     007C                     u35_20:
  1980     007C                     i1l1073:
  1981     007C  09F2               	comf	___awdiv@dividend,f
  1982     007D  09F3               	comf	___awdiv@dividend+1,f
  1983     007E  0AF2               	incf	___awdiv@dividend,f
  1984     007F  1903               	skipnz
  1985     0080  0AF3               	incf	___awdiv@dividend+1,f
  1986     0081                     i1l1075:
  1987     0081  3001               	movlw	1
  1988     0082  00F4               	movwf	??___awdiv
  1989     0083  0874               	movf	??___awdiv,w
  1990     0084  06F6               	xorwf	___awdiv@sign,f
  1991     0085                     i1l1077:
  1992     0085  01F7               	clrf	___awdiv@quotient
  1993     0086  01F8               	clrf	___awdiv@quotient+1
  1994     0087                     i1l1079:
  1995     0087  0870               	movf	___awdiv@divisor,w
  1996     0088  0471               	iorwf	___awdiv@divisor+1,w
  1997     0089  1903               	btfsc	3,2
  1998     008A  288C               	goto	u36_21
  1999     008B  288D               	goto	u36_20
  2000     008C                     u36_21:
  2001     008C  28BC               	goto	i1l1099
  2002     008D                     u36_20:
  2003     008D                     i1l1081:
  2004     008D  01F5               	clrf	___awdiv@counter
  2005     008E  0AF5               	incf	___awdiv@counter,f
  2006     008F  2899               	goto	i1l1087
  2007     0090                     i1l1083:
  2008     0090  3001               	movlw	1
  2009     0091                     u37_25:
  2010     0091  35F0               	lslf	___awdiv@divisor,f
  2011     0092  0DF1               	rlf	___awdiv@divisor+1,f
  2012     0093  0B89               	decfsz	9,f
  2013     0094  2891               	goto	u37_25
  2014     0095                     i1l1085:
  2015     0095  3001               	movlw	1
  2016     0096  00F4               	movwf	??___awdiv
  2017     0097  0874               	movf	??___awdiv,w
  2018     0098  07F5               	addwf	___awdiv@counter,f
  2019     0099                     i1l1087:
  2020     0099  1FF1               	btfss	___awdiv@divisor+1,7
  2021     009A  289C               	goto	u38_21
  2022     009B  289D               	goto	u38_20
  2023     009C                     u38_21:
  2024     009C  2890               	goto	i1l1083
  2025     009D                     u38_20:
  2026     009D                     i1l1089:
  2027     009D  3001               	movlw	1
  2028     009E                     u39_25:
  2029     009E  35F7               	lslf	___awdiv@quotient,f
  2030     009F  0DF8               	rlf	___awdiv@quotient+1,f
  2031     00A0  0B89               	decfsz	9,f
  2032     00A1  289E               	goto	u39_25
  2033     00A2  0871               	movf	___awdiv@divisor+1,w
  2034     00A3  0273               	subwf	___awdiv@dividend+1,w
  2035     00A4  1D03               	skipz
  2036     00A5  28A8               	goto	u40_25
  2037     00A6  0870               	movf	___awdiv@divisor,w
  2038     00A7  0272               	subwf	___awdiv@dividend,w
  2039     00A8                     u40_25:
  2040     00A8  1C03               	skipc
  2041     00A9  28AB               	goto	u40_21
  2042     00AA  28AC               	goto	u40_20
  2043     00AB                     u40_21:
  2044     00AB  28B1               	goto	i1l1095
  2045     00AC                     u40_20:
  2046     00AC                     i1l1091:
  2047     00AC  0870               	movf	___awdiv@divisor,w
  2048     00AD  02F2               	subwf	___awdiv@dividend,f
  2049     00AE  0871               	movf	___awdiv@divisor+1,w
  2050     00AF  3BF3               	subwfb	___awdiv@dividend+1,f
  2051     00B0                     i1l1093:
  2052     00B0  1477               	bsf	___awdiv@quotient,0
  2053     00B1                     i1l1095:
  2054     00B1  3001               	movlw	1
  2055     00B2                     u41_25:
  2056     00B2  36F1               	lsrf	___awdiv@divisor+1,f
  2057     00B3  0CF0               	rrf	___awdiv@divisor,f
  2058     00B4  0B89               	decfsz	9,f
  2059     00B5  28B2               	goto	u41_25
  2060     00B6                     i1l1097:
  2061     00B6  3001               	movlw	1
  2062     00B7  02F5               	subwf	___awdiv@counter,f
  2063     00B8  1D03               	btfss	3,2
  2064     00B9  28BB               	goto	u42_21
  2065     00BA  28BC               	goto	u42_20
  2066     00BB                     u42_21:
  2067     00BB  289D               	goto	i1l1089
  2068     00BC                     u42_20:
  2069     00BC                     i1l1099:
  2070     00BC  0876               	movf	___awdiv@sign,w
  2071     00BD  1903               	btfsc	3,2
  2072     00BE  28C0               	goto	u43_21
  2073     00BF  28C1               	goto	u43_20
  2074     00C0                     u43_21:
  2075     00C0  28C6               	goto	i1l1103
  2076     00C1                     u43_20:
  2077     00C1                     i1l1101:
  2078     00C1  09F7               	comf	___awdiv@quotient,f
  2079     00C2  09F8               	comf	___awdiv@quotient+1,f
  2080     00C3  0AF7               	incf	___awdiv@quotient,f
  2081     00C4  1903               	skipnz
  2082     00C5  0AF8               	incf	___awdiv@quotient+1,f
  2083     00C6                     i1l1103:
  2084     00C6  0878               	movf	___awdiv@quotient+1,w
  2085     00C7  00F1               	movwf	?___awdiv+1
  2086     00C8  0877               	movf	___awdiv@quotient,w
  2087     00C9  00F0               	movwf	?___awdiv
  2088     00CA                     i1l468:
  2089     00CA  0008               	return
  2090     00CB                     __end_of___awdiv:
  2091                           
  2092                           	psect	text6
  2093     0204                     __ptext6:	
  2094 ;; *************** function _SPI_read_TC *****************
  2095 ;; Defined at:
  2096 ;;		line 131 in file "main.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  TC_MB           1    2[COMMON] unsigned char 
  2101 ;;  TC_LB           1    0        unsigned char 
  2102 ;;  TC_HB           1    0        unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2112 ;;      Params:         0       0       0       0       0       0       0       0
  2113 ;;      Locals:         1       0       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0
  2115 ;;      Totals:         1       0       0       0       0       0       0       0
  2116 ;;Total ram usage:        1 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 2
  2119 ;; This function calls:
  2120 ;;		_SPI_read
  2121 ;; This function is called by:
  2122 ;;		_upd_disp
  2123 ;;		_get_cur_temp
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127     0204                     _SPI_read_TC:	
  2128                           ;psect for function _SPI_read_TC
  2129                           
  2130     0204                     i1l1155:	
  2131                           ;incstack = 0
  2132                           ; Regs used in _SPI_read_TC: [wreg+status,2+status,0+pclath+cstack]
  2133                           
  2134                           
  2135                           ;main.c: 132:     uint8_t TC_HB;;main.c: 133:     uint8_t TC_MB;;main.c: 134:     uint8_
      +                          t TC_LB;;main.c: 136:     PORTBbits.RB6 = 0;
  2136     0204  0020               	movlb	0	; select bank0
  2137     0205  130D               	bcf	13,6	;volatile
  2138     0206                     i1l1157:
  2139     0206  300C               	movlw	12
  2140     0207  3182  221E  3182   	fcall	_SPI_read
  2141     020A                     i1l1159:
  2142                           
  2143                           ;main.c: 138:     PORTBbits.RB6 = 1;
  2144     020A  0020               	movlb	0	; select bank0
  2145     020B  170D               	bsf	13,6	;volatile
  2146     020C                     i1l1161:
  2147                           
  2148                           ;main.c: 140:     PORTBbits.RB6 = 0;
  2149     020C  130D               	bcf	13,6	;volatile
  2150                           
  2151                           ;main.c: 141:     TC_MB = SPI_read(0x0D);
  2152     020D  300D               	movlw	13
  2153     020E  3182  221E  3182   	fcall	_SPI_read
  2154     0211  00F2               	movwf	SPI_read_TC@TC_MB
  2155     0212                     i1l1163:
  2156                           
  2157                           ;main.c: 142:     PORTBbits.RB6 = 1;
  2158     0212  0020               	movlb	0	; select bank0
  2159     0213  170D               	bsf	13,6	;volatile
  2160     0214                     i1l1165:
  2161                           
  2162                           ;main.c: 145:     PORTBbits.RB6 = 0;
  2163     0214  130D               	bcf	13,6	;volatile
  2164     0215  300E               	movlw	14
  2165     0216  3182  221E  3182   	fcall	_SPI_read
  2166     0219                     i1l1167:
  2167                           
  2168                           ;main.c: 147:     PORTBbits.RB6 = 1;
  2169     0219  0020               	movlb	0	; select bank0
  2170     021A  170D               	bsf	13,6	;volatile
  2171     021B                     i1l1169:
  2172                           
  2173                           ;main.c: 150:     T_cur = TC_MB;
  2174     021B  0872               	movf	SPI_read_TC@TC_MB,w
  2175     021C  00B1               	movwf	_T_cur
  2176     021D                     i1l129:
  2177     021D  0008               	return
  2178     021E                     __end_of_SPI_read_TC:
  2179                           
  2180                           	psect	text7
  2181     021E                     __ptext7:	
  2182 ;; *************** function _SPI_read *****************
  2183 ;; Defined at:
  2184 ;;		line 98 in file "main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  addr            1    wreg     unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  addr            1    1[COMMON] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      unsigned char 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2198 ;;      Params:         0       0       0       0       0       0       0       0
  2199 ;;      Locals:         1       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0
  2201 ;;      Totals:         1       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        1 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 1
  2205 ;; This function calls:
  2206 ;;		_SPI_out
  2207 ;; This function is called by:
  2208 ;;		_SPI_read_TC
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     021E                     _SPI_read:	
  2213                           ;psect for function _SPI_read
  2214                           
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _SPI_read: [wreg+status,2+status,0+pclath+cstack]
  2218                           ;SPI_read@addr stored from wreg
  2219     021E  00F1               	movwf	SPI_read@addr
  2220     021F                     i1l1057:
  2221                           
  2222                           ;main.c: 100:     SPI_out(addr);
  2223     021F  0871               	movf	SPI_read@addr,w
  2224     0220  3182  222A  3182   	fcall	_SPI_out
  2225                           
  2226                           ;main.c: 102:     SPI_out(0x00);
  2227     0223  3000               	movlw	0
  2228     0224  3182  222A  3182   	fcall	_SPI_out
  2229     0227                     i1l1059:
  2230                           
  2231                           ;main.c: 104:     return SSP1BUF;
  2232     0227  0024               	movlb	4	; select bank4
  2233     0228  0811               	movf	17,w	;volatile
  2234     0229                     i1l117:
  2235     0229  0008               	return
  2236     022A                     __end_of_SPI_read:
  2237                           
  2238                           	psect	text8
  2239     022A                     __ptext8:	
  2240 ;; *************** function _SPI_out *****************
  2241 ;; Defined at:
  2242 ;;		line 91 in file "main.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  dat             1    wreg     unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  dat             1    0[COMMON] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2256 ;;      Params:         0       0       0       0       0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0
  2259 ;;      Totals:         1       0       0       0       0       0       0       0
  2260 ;;Total ram usage:        1 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_SPI_read
  2266 ;;		_upd_disp
  2267 ;;		_get_cur_temp
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     022A                     _SPI_out:	
  2272                           ;psect for function _SPI_out
  2273                           
  2274                           
  2275                           ;incstack = 0
  2276                           ; Regs used in _SPI_out: [wreg]
  2277                           ;SPI_out@dat stored from wreg
  2278     022A  00F0               	movwf	SPI_out@dat
  2279     022B                     i1l1055:
  2280                           
  2281                           ;main.c: 93:     SSP1BUF = dat;
  2282     022B  0870               	movf	SPI_out@dat,w
  2283     022C  0024               	movlb	4	; select bank4
  2284     022D  0091               	movwf	17	;volatile
  2285     022E                     i1l111:	
  2286                           ;main.c: 95:     while(!SSP1STATbits.BF);
  2287                           
  2288     022E  1C14               	btfss	20,0	;volatile
  2289     022F  2A31               	goto	u33_21
  2290     0230  2A32               	goto	u33_20
  2291     0231                     u33_21:
  2292     0231  2A2E               	goto	i1l111
  2293     0232                     u33_20:
  2294     0232                     i1l114:
  2295     0232  0008               	return
  2296     0233                     __end_of_SPI_out:
  2297     007E                     btemp	set	126	;btemp
  2298     007E                     int$flags	set	126
  2299     007E                     wtemp0	set	126
  2300                           
  2301                           	psect	config
  2302                           
  2303                           ;Config register CONFIG1 @ 0x8007
  2304                           ;	FEXTOSC External Oscillator mode Selection bits
  2305                           ;	FEXTOSC = OFF, Oscillator not enabled
  2306                           ;	Power-up default value for COSC bits
  2307                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
  2308                           ;	Clock Out Enable bit
  2309                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  2310                           ;	Clock Switch Enable bit
  2311                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2312                           ;	Fail-Safe Clock Monitor Enable
  2313                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2314     8007                     	org	32775
  2315     8007  3F8C               	dw	16268
  2316                           
  2317                           ;Config register CONFIG2 @ 0x8008
  2318                           ;	Master Clear Enable bit
  2319                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  2320                           ;	Power-up Timer Enable bit
  2321                           ;	PWRTE = OFF, PWRT disabled
  2322                           ;	Watchdog Timer Enable bits
  2323                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
  2324                           ;	Low-power BOR enable bit
  2325                           ;	LPBOREN = OFF, ULPBOR disabled
  2326                           ;	Brown-out Reset Enable bits
  2327                           ;	BOREN = OFF, Brown-out Reset disabled
  2328                           ;	Brown-out Reset Voltage selection bit
  2329                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  2330                           ;	PPSLOCK bit One-Way Set Enable bit
  2331                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  2332                           ;	Stack Overflow/Underflow Reset Enable bit
  2333                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2334                           ;	Debugger enable bit
  2335                           ;	DEBUG = OFF, Background debugger disabled
  2336     8008                     	org	32776
  2337     8008  3F33               	dw	16179
  2338                           
  2339                           ;Config register CONFIG3 @ 0x8009
  2340                           ;	User NVM self-write protection bits
  2341                           ;	WRT = OFF, Write protection off
  2342                           ;	Low Voltage Programming Enable bit
  2343                           ;	LVP = OFF, High Voltage on MCLR/VPP must be used for programming.
  2344     8009                     	org	32777
  2345     8009  1FFF               	dw	8191
  2346                           
  2347                           ;Config register CONFIG4 @ 0x800A
  2348                           ;	User NVM Program Memory Code Protection bit
  2349                           ;	CP = OFF, User NVM code protection disabled
  2350                           ;	Data NVM Memory Code Protection bit
  2351                           ;	CPD = OFF, Data NVM code protection disabled
  2352     800A                     	org	32778
  2353     800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      2      22
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_upd_disp
    _upd_disp->_upd_temp
    _upd_temp->___awdiv
    _SPI_read_TC->_SPI_read
    _SPI_read->_SPI_out

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  1     1      0    2803
                                             12 COMMON     1     1      0
                           _upd_disp
                           _upd_temp
 ---------------------------------------------------------------------------------
 (2) _upd_disp                                             1     1      0    1447
                                             11 COMMON     1     1      0
                            _SPI_out
                        _SPI_read_TC
                           _upd_temp
 ---------------------------------------------------------------------------------
 (2) _upd_temp                                             2     2      0    1356
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _SPI_read_TC                                          3     3      0      69
                                              2 COMMON     1     1      0
                           _SPI_read
 ---------------------------------------------------------------------------------
 (4) _SPI_read                                             1     1      0      44
                                              1 COMMON     1     1      0
                            _SPI_out
 ---------------------------------------------------------------------------------
 (5) _SPI_out                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _upd_disp
     _SPI_out
     _SPI_read_TC
       _SPI_read
         _SPI_out
     _upd_temp
       ___awdiv
       ___awmod
   _upd_temp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      24       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      16       6       27.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      24      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 26 09:17:11 2023

           ___awdiv@sign 0076                       _dt 0027                      l160 0123  
                    l161 0123                      _ISR 0004                      u707 00D6  
                    _K_I 0032                      _K_P 0033             ___awmod@sign 0076  
                    wreg 0009              _SPI_read_TC 0204                     ?_ISR 0070  
                   l1301 0109                     l1311 0115                     l1303 010C  
                   l1321 011C                     l1313 0116                     l1305 010E  
                   l1331 0122                     l1323 011D                     l1315 0118  
                   l1307 0110                     l1325 011E                     l1317 011A  
                   l1309 0114                     l1261 00E1                     l1253 00CB  
                   l1327 0120                     l1319 011B                     l1271 00E6  
                   l1263 00E2                     l1255 00DD                     l1329 0121  
                   l1281 00EB                     l1273 00E7                     l1265 00E3  
                   l1257 00DF                     l1291 00FD                     l1283 00EC  
                   l1275 00E8                     l1267 00E4                     l1259 00E0  
                   l1293 00FF                     l1285 00ED                     l1277 00E9  
                   l1269 00E5                     l1295 0102                     l1287 00EF  
                   l1279 00EA                     l1297 0104                     l1289 00FA  
                   l1299 0106                     _LATA 010C                     _LATB 010D  
                   _LATC 010E                     _main 00CB                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
        __end_of_SPI_out 0233                     start 004E                    ??_ISR 007C  
                  ?_main 0070          __end_of___awdiv 00CB          __end_of___awmod 0179  
        ___awdiv@divisor 0070                    _IOCAF 0393                    i1l111 022E  
                  i1l114 0232                    i1l140 0203                    i1l117 0229  
                  i1l126 01C6                    i1l129 021D                    i1l155 004C  
                  i1l481 0178                    i1l468 00CA          ___awdiv@counter 0075  
                  u40_20 00AC                    u40_21 00AB                    u40_25 00A8  
                  u33_20 0232                    u33_21 0231                    u41_25 00B2  
                  u42_20 00BC                    u34_20 0071                    u42_21 00BB  
                  u34_21 0070                    u50_25 0160                    u43_20 00C1  
                  u35_20 007C                    u51_20 016A                    u43_21 00C0  
                  u35_21 007B                    u51_21 0169                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    u36_20 008D  
                  u52_20 016F                    u44_20 012B                    u60_20 0026  
                  u36_21 008C                    u52_21 016E                    u44_21 012A  
                  u60_21 0025                    u45_20 0136                    u53_20 01DC  
                  u61_20 002B                    u45_21 0135                    u53_21 01DB  
                  u61_21 002A                    u37_25 0091                    u38_20 009D  
                  u46_20 0141                    u54_20 01E3                    u62_20 0035  
                  u38_21 009C                    u46_21 0140                    u54_21 01E2  
                  u62_21 0034                    u63_20 0040                    u63_21 003F  
                  u39_25 009E                    u47_25 0145                    u48_20 0151  
                  u56_20 000D                    u48_21 0150                    u56_21 000C  
                  u49_20 015B                    u57_20 0012                    u49_21 015A  
                  u57_21 0011                    u49_25 0157                    u58_20 001C  
                  u58_21 001B                    u59_20 0021                    u59_21 0020  
                  _T_cur 0031                    _T_set 007D         __end_of_SPI_read 022A  
                  status 0003                    wtemp0 007E          __initialization 0050  
           __end_of_main 0126                   ??_main 0034               _T_cur_ones 002B  
             _T_cur_tens 002C         ___awdiv@dividend 0072                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E                   _T0CON0 0017  
                 _T0CON1 0018                ??_SPI_out 0070                   _RA0PPS 0E90  
                 _RC1STA 019D                   i1l1101 00C1                   i1l1103 00C6  
                 i1l1111 012B                   i1l1121 0141                   i1l1113 0130  
                 i1l1201 0202                   i1l1131 015B                   i1l1123 0144  
                 i1l1115 0132                   i1l1107 0126                   _RC4PPS 0EA4  
                 i1l1141 0174                   i1l1133 015F                   i1l1125 0149  
                 i1l1117 0136                   i1l1109 0127                   i1l1221 0012  
                 i1l1055 022B                   i1l1071 0078                   i1l1063 006C  
                 i1l1135 0164                   i1l1127 014D                   i1l1119 013B  
                 i1l1151 01C2                   i1l1231 0026                   i1l1223 0015  
                 i1l1057 021F                   i1l1161 020C                   i1l1081 008D  
                 i1l1073 007C                   i1l1065 006D                   i1l1129 0151  
                 i1l1137 016A                   i1l1153 01C4                   i1l1145 0179  
                 i1l1241 003A                   i1l1233 002B                   i1l1225 0017  
                 i1l1217 0006                   i1l1059 0227                   i1l1163 0212  
                 i1l1155 0204                   i1l1091 00AC                   i1l1083 0090  
                 i1l1075 0081                   i1l1067 0071                   i1l1139 016F  
                 i1l1147 01BE                   i1l1171 01C7                   i1l1251 004B  
                 i1l1243 0040                   i1l1235 002F                   i1l1227 001C  
                 i1l1219 000D                   i1l1165 0214                   i1l1157 0206  
                 i1l1093 00B0                   i1l1085 0095                   i1l1077 0085  
                 i1l1069 0076                   i1l1149 01C0                   i1l1181 01D6  
                 i1l1173 01CB                   i1l1237 0035                   i1l1245 0042  
                 i1l1229 0021                   i1l1167 0219                   i1l1159 020A  
                 i1l1095 00B1                   i1l1087 0099                   i1l1079 0087  
                 i1l1191 01E8                   i1l1183 01DC                   i1l1175 01CD  
                 i1l1247 0047                   i1l1239 0038                   i1l1169 021B  
                 i1l1097 00B6                   i1l1089 009D                   i1l1193 01EB  
                 i1l1185 01DD                   i1l1177 01CE                   i1l1249 004A  
                 i1l1099 00BC                   i1l1195 01F0                   i1l1187 01E3  
                 i1l1179 01D2                   _RC6PPS 0EA6                   i1l1197 01F8  
                 i1l1189 01E6                   i1l1199 0200                   _DC_max 0026  
                 _OSCFRQ 091F                   _TX1REG 019A                   _TX1STA 019E  
             _T_set_ones 0029               _T_set_tens 002A                ??___awdiv 0074  
              ??___awmod 0074                   _disp_T 0020         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075             __pdataCOMMON 007D  
       __end_of_upd_disp 0204         __end_of_upd_temp 01C7         SPI_read_TC@TC_MB 0072  
__end_of__initialization 0068             SPI_read@addr 0071           __pcstackCOMMON 0070  
           __pidataBANK0 0233                ?_SPI_read 0070             ?_SPI_read_TC 0070  
             __pbssBANK0 0020               __pmaintext 00CB               __pintentry 0004  
             ??_SPI_read 0071                  _SP1BRGL 019B                  _OSCCON1 0919  
                _SSP1BUF 0211                  _SPI_out 022A                ?_upd_disp 0070  
                ___awdiv 006C                  ___awmod 0126                ?_upd_temp 0070  
                __ptext2 01C7                  __ptext3 0179                  __ptext4 0126  
                __ptext5 006C                  __ptext6 0204                  __ptext7 021E  
                __ptext8 022A         ___awmod@dividend 0072                _IOCAFbits 0393  
              _IOCANbits 0392                  clrloop0 0241     end_of_initialization 0068  
                init_ram 023A                  initloop 023B               ??_upd_disp 007B  
             ??_upd_temp 0079                _PORTAbits 000C                _PORTBbits 000D  
              _PORTCbits 000E                _TRISAbits 008C                _TRISBbits 008D  
              _TRISCbits 008E            __pidataCOMMON 0246      start_initialization 0050  
            __end_of_ISR 004E              __pdataBANK0 002D                ___latbits 0001  
          __pcstackBANK0 0034                 ?_SPI_out 0070                 ?___awdiv 0070  
               ?___awmod 0070                 _BAUD1CON 019F                clear_ram0 0240  
               _PIE0bits 0090                 _PIR0bits 0010                 _PIR1bits 0011  
               _SSP1CON1 0215                 _SPI_read 021E                 _TC_count 0025  
             SPI_out@dat 0070            ??_SPI_read_TC 0072                 _disp_dig 002D  
               _disp_num 0024                 _err_prev 0028                 int$flags 007E  
               _upd_disp 01C7                 _upd_temp 0179             _SSP1STATbits 0214  
             _INTCONbits 000B                 intlevel1 0000      __end_of_SPI_read_TC 021E  
             _SSP1DATPPS 0E21  
